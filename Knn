from sklearn.neighbors import KNeighborsClassifier from sklearn.model_selection import train_test_split
from sklearn.datasets import load iris from sklearn.metrics import classification report, confusion matrix
irisData load_iris()

//Creating feature and target arrays

XirisData.data
yirisData.target
print("DataSet of Lengths and Breadth of sepals and petals: ")
X

DataSet of Lengths and Breadth of sepals and petals:
print("Targets for above data: ")

y
X_train, X_test, y train, y_test train_test_split(X, y, test size= 0.2, random state=42)

//Training the Model

knn KNeighborsClassifier(n_neighbors=7)
knn.fit(X_train, y_train)

OUTPUT:

KNeighborsClassifier

KNeighborsClassifier(n_neighbors=7)

// Predict on dataset which model has not seen before

y_pred knn.predict (X_test)

print("Predicted values by the model:")

print (y_pred)

print("Actual Target values in Test Dataset :")

print (y_test) 
OUTPUT:

Predicted values by the model:

[1 0 2 1 1 0 1 2 2 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2222200)

Actual Target values in Test Dataset :

[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 200)

print("Confusion Matrix of above y pred and y test:

\n",confusion_matrix(y_test, y pred))

OUTPUT:

Confusion Matrix of above y pred and y test:

[[1000]

108 11

[0011]]

ROLL NO:

EXPERIMENT:

:

PAGE NO:

19/2

DATE:

print("Classification report: \n",classification_report (y_test,y_pred))
